name: Publish Python üêç distributions üì¶ to PyPI

on:
  push:
#    tags:
#      - "v*"


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
#        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and build distribution üì¶
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run unit tests üß™
        run: |
          if [ -d tests ]; then python -m unittest ./tests/**.py; fi

      - name: Build distribution üì¶
        run: |
          python setup.py sdist bdist_wheel

      - name: Get version from package
        uses: mathiasvr/command-output@v2.0.0
        id: package_version
        with:
          run: sed '/^$/ , $d' flask_httpx_request_converted_to_flask_test_client_request.egg-info/PKG-INFO | awk '/^Version/ {print $2}' | tr -d '\n'

      - name: Dump GitHub context
        env:
          PACKAGE_VERSION: ${{ steps.package_version.outputs.stdout }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          echo "PACKAGE_VERSION: '$PACKAGE_VERSION'"
          echo "GITHUB_REF     : '$GITHUB_REF'"

      - name: Publish distribution üì¶ to PyPI
        if: ${{ github.ref == format('refs/tags/v{0}', steps.package_version.outputs.stdout) }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
